{"ast":null,"code":"const getUser = () => {\n  const existingUser = sessionStorage.getItem('userId');\n\n  if (existingUser) {\n    return existingUser;\n  } else {\n    const newUser = 'user-' + new Date().getTime();\n    sessionStorage.setItem('userId', newUser);\n    return newUser;\n  }\n};\n\nconst getDataKey = () => {\n  const userId = getUser();\n  return `emaJohn/carts/${userId}`;\n}; // push to local storage: a temporary place for database\n\n\nconst getDatabaseCart = () => {\n  const dataKey = getDataKey();\n  const data = localStorage.getItem(dataKey) || \"{}\";\n  return JSON.parse(data);\n};\n\nconst addToDatabaseCart = (key, count) => {\n  const currentCart = getDatabaseCart();\n  currentCart[key] = count;\n  localStorage.setItem(getDataKey(), JSON.stringify(currentCart));\n};\n\nconst removeFromDatabaseCart = key => {\n  const currentCart = getDatabaseCart();\n  delete currentCart[key];\n  localStorage.setItem(getDataKey(), JSON.stringify(currentCart));\n};\n\nconst processOrder = cart => {\n  localStorage.removeItem(getDataKey());\n};\n\nexport { addToDatabaseCart, getDatabaseCart, removeFromDatabaseCart, processOrder }; // polyfill to support older browser\n\nconst localStorage = window.localStorage || (() => {\n  let store = {};\n  return {\n    getItem(key) {\n      return store[key];\n    },\n\n    setItem(key, value) {\n      store[key] = value.toString();\n    },\n\n    clear() {\n      store = {};\n    }\n\n  };\n})();\n\nconst sessionStorage = window.sessionStorage || (() => {\n  let store = {};\n  return {\n    getItem(key) {\n      return store[key];\n    },\n\n    setItem(key, value) {\n      store[key] = value.toString();\n    },\n\n    clear() {\n      store = {};\n    }\n\n  };\n})(); // end of poly fill","map":{"version":3,"sources":["D:/Personal/MY DEVELOPMENT/react-ecommerce-project1/src/utilities/database.js"],"names":["getUser","existingUser","sessionStorage","getItem","newUser","Date","getTime","setItem","getDataKey","userId","getDatabaseCart","dataKey","data","localStorage","JSON","parse","addToDatabaseCart","key","count","currentCart","stringify","removeFromDatabaseCart","processOrder","cart","removeItem","window","store","value","toString","clear"],"mappings":"AAAA,MAAMA,OAAO,GAAG,MAAM;AAClB,QAAMC,YAAY,GAAGC,cAAc,CAACC,OAAf,CAAuB,QAAvB,CAArB;;AACA,MAAIF,YAAJ,EAAkB;AACd,WAAOA,YAAP;AACH,GAFD,MAEO;AACH,UAAMG,OAAO,GAAG,UAAU,IAAIC,IAAJ,GAAWC,OAAX,EAA1B;AACAJ,IAAAA,cAAc,CAACK,OAAf,CAAuB,QAAvB,EAAiCH,OAAjC;AACA,WAAOA,OAAP;AACH;AACF,CATH;;AAWE,MAAMI,UAAU,GAAG,MAAM;AACvB,QAAMC,MAAM,GAAGT,OAAO,EAAtB;AACA,SAAQ,iBAAgBS,MAAO,EAA/B;AACD,CAHD,C,CAKA;;;AACA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAMI,IAAI,GAAGC,YAAY,CAACV,OAAb,CAAqBQ,OAArB,KAAiC,IAA9C;AACA,SAAOG,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAP;AACD,CAJD;;AAMA,MAAMI,iBAAiB,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACxC,QAAMC,WAAW,GAAGT,eAAe,EAAnC;AACAS,EAAAA,WAAW,CAACF,GAAD,CAAX,GAAmBC,KAAnB;AACAL,EAAAA,YAAY,CAACN,OAAb,CAAqBC,UAAU,EAA/B,EAAmCM,IAAI,CAACM,SAAL,CAAeD,WAAf,CAAnC;AACD,CAJD;;AAMA,MAAME,sBAAsB,GAAGJ,GAAG,IAAI;AACpC,QAAME,WAAW,GAAGT,eAAe,EAAnC;AACA,SAAOS,WAAW,CAACF,GAAD,CAAlB;AACAJ,EAAAA,YAAY,CAACN,OAAb,CAAqBC,UAAU,EAA/B,EAAmCM,IAAI,CAACM,SAAL,CAAeD,WAAf,CAAnC;AACD,CAJD;;AAMA,MAAMG,YAAY,GAAIC,IAAD,IAAU;AAC7BV,EAAAA,YAAY,CAACW,UAAb,CAAwBhB,UAAU,EAAlC;AACD,CAFD;;AAKA,SAASQ,iBAAT,EAA4BN,eAA5B,EAA6CW,sBAA7C,EAAqEC,YAArE,G,CAGA;;AACA,MAAMT,YAAY,GAAGY,MAAM,CAACZ,YAAP,IAAuB,CAAC,MAAM;AACnD,MAAIa,KAAK,GAAG,EAAZ;AACA,SAAO;AACLvB,IAAAA,OAAO,CAACc,GAAD,EAAM;AACX,aAAOS,KAAK,CAACT,GAAD,CAAZ;AACD,KAHI;;AAILV,IAAAA,OAAO,CAACU,GAAD,EAAMU,KAAN,EAAa;AAClBD,MAAAA,KAAK,CAACT,GAAD,CAAL,GAAaU,KAAK,CAACC,QAAN,EAAb;AACD,KANI;;AAOLC,IAAAA,KAAK,GAAG;AACNH,MAAAA,KAAK,GAAG,EAAR;AACD;;AATI,GAAP;AAWC,CAb2C,GAA5C;;AAeA,MAAMxB,cAAc,GAAGuB,MAAM,CAACvB,cAAP,IAAyB,CAAC,MAAM;AACvD,MAAIwB,KAAK,GAAG,EAAZ;AACA,SAAO;AACLvB,IAAAA,OAAO,CAACc,GAAD,EAAM;AACX,aAAOS,KAAK,CAACT,GAAD,CAAZ;AACD,KAHI;;AAILV,IAAAA,OAAO,CAACU,GAAD,EAAMU,KAAN,EAAa;AAClBD,MAAAA,KAAK,CAACT,GAAD,CAAL,GAAaU,KAAK,CAACC,QAAN,EAAb;AACD,KANI;;AAOLC,IAAAA,KAAK,GAAG;AACNH,MAAAA,KAAK,GAAG,EAAR;AACD;;AATI,GAAP;AAWC,CAb+C,GAAhD,C,CAcA","sourcesContent":["const getUser = () => {\r\n    const existingUser = sessionStorage.getItem('userId');\r\n    if (existingUser) {\r\n        return existingUser; \r\n    } else {\r\n        const newUser = 'user-' + new Date().getTime();\r\n        sessionStorage.setItem('userId', newUser)\r\n        return newUser;\r\n    }\r\n  }\r\n  \r\n  const getDataKey = () => {\r\n    const userId = getUser();\r\n    return `emaJohn/carts/${userId}`\r\n  }\r\n  \r\n  // push to local storage: a temporary place for database\r\n  const getDatabaseCart = () => {\r\n    const dataKey = getDataKey();\r\n    const data = localStorage.getItem(dataKey) || \"{}\";\r\n    return JSON.parse(data);\r\n  }\r\n  \r\n  const addToDatabaseCart = (key, count) => {\r\n    const currentCart = getDatabaseCart();\r\n    currentCart[key] = count;\r\n    localStorage.setItem(getDataKey(), JSON.stringify(currentCart));\r\n  }\r\n  \r\n  const removeFromDatabaseCart = key => {\r\n    const currentCart = getDatabaseCart();\r\n    delete currentCart[key];\r\n    localStorage.setItem(getDataKey(), JSON.stringify(currentCart));\r\n  }\r\n  \r\n  const processOrder = (cart) => {\r\n    localStorage.removeItem(getDataKey());\r\n  }\r\n  \r\n  \r\n  export { addToDatabaseCart, getDatabaseCart, removeFromDatabaseCart, processOrder };\r\n  \r\n  \r\n  // polyfill to support older browser\r\n  const localStorage = window.localStorage || (() => {\r\n  let store = {}\r\n  return {\r\n    getItem(key) {\r\n      return store[key]\r\n    },\r\n    setItem(key, value) {\r\n      store[key] = value.toString()\r\n    },\r\n    clear() {\r\n      store = {}\r\n    }\r\n  };\r\n  })()\r\n  \r\n  const sessionStorage = window.sessionStorage || (() => {\r\n  let store = {}\r\n  return {\r\n    getItem(key) {\r\n      return store[key]\r\n    },\r\n    setItem(key, value) {\r\n      store[key] = value.toString()\r\n    },\r\n    clear() {\r\n      store = {}\r\n    }\r\n  };\r\n  })()\r\n  // end of poly fill"]},"metadata":{},"sourceType":"module"}